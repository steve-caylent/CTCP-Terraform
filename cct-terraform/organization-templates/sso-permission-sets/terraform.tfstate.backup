{
  "version": 4,
  "terraform_version": "1.0.11",
  "serial": 3,
  "lineage": "f72b875f-e098-c09d-ea1e-b9754d12c73c",
  "outputs": {
    "sso_arn": {
      "value": "arn:aws:sso:::permissionSet/ssoins-72233c1e1e625335/ps-ccda6ffc90cdb7e1",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "sso_permissions",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3144673871",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"lambda:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"rds:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"cloudwatch:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"cloudformation:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"ec2:Delete*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"lambda:Delete*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"s3:Delete*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"dynamodb:Delete*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"rds:Delete*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"cloudwatch:Delete*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"ec2:AcceptVpcPeeringConnection*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"ec2:UpdateSecurityGroupRuleDescriptionsIngress\",\n        \"ec2:UpdateSecurityGroupRuleDescriptionsEgress\",\n        \"ec2:UnassignPrivateIpAddresses\",\n        \"ec2:UnassignIpv6Addresses\",\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:RevokeSecurityGroupEgress\",\n        \"ec2:RestoreAddressToClassic\",\n        \"ec2:ResetNetworkInterfaceAttribute\",\n        \"ec2:ReplaceRouteTableAssociation\",\n        \"ec2:ReplaceRoute\",\n        \"ec2:ReplaceNetworkAclEntry\",\n        \"ec2:ReplaceNetworkAclAssociation\",\n        \"ec2:ReleaseAddress\",\n        \"ec2:RejectVpcPeeringConnection\",\n        \"ec2:RejectVpcEndpointConnections\",\n        \"ec2:MoveAddressToVpc\",\n        \"ec2:ModifyVpcTenancy\",\n        \"ec2:ModifyVpcPeeringConnectionOptions\",\n        \"ec2:ModifyVpcEndpointServicePermissions\",\n        \"ec2:ModifyVpcEndpointServiceConfiguration\",\n        \"ec2:ModifyVpcEndpointConnectionNotification\",\n        \"ec2:ModifyVpcEndpoint\",\n        \"ec2:ModifyVpcAttribute\",\n        \"ec2:ModifySubnetAttribute\",\n        \"ec2:ModifySecurityGroupRules\",\n        \"ec2:ModifyNetworkInterfaceAttribute\",\n        \"ec2:EnableVpcClassicLinkDnsSupport\",\n        \"ec2:EnableVpcClassicLink\",\n        \"ec2:EnableVgwRoutePropagation\",\n        \"ec2:DisassociateVpcCidrBlock\",\n        \"ec2:DisassociateSubnetCidrBlock\",\n        \"ec2:DisassociateRouteTable\",\n        \"ec2:DisassociateAddress\",\n        \"ec2:DisableVpcClassicLinkDnsSupport\",\n        \"ec2:DisableVpcClassicLink\",\n        \"ec2:DisableVgwRoutePropagation\",\n        \"ec2:DetachVpnGateway\",\n        \"ec2:DetachNetworkInterface\",\n        \"ec2:DetachInternetGateway\",\n        \"ec2:DetachClassicLinkVpc\",\n        \"ec2:DeleteVpnGateway\",\n        \"ec2:DeleteVpnConnectionRoute\",\n        \"ec2:DeleteVpnConnection\",\n        \"ec2:DeleteVpcPeeringConnection\",\n        \"ec2:DeleteVpcEndpoints\",\n        \"ec2:DeleteVpcEndpointServiceConfigurations\",\n        \"ec2:DeleteVpcEndpointConnectionNotifications\",\n        \"ec2:DeleteVpc\",\n        \"ec2:DeleteTags\",\n        \"ec2:DeleteSubnet\",\n        \"ec2:DeleteSecurityGroup\",\n        \"ec2:DeleteRouteTable\",\n        \"ec2:DeleteRoute\",\n        \"ec2:DeleteNetworkInterfacePermission\",\n        \"ec2:DeleteNetworkInterface\",\n        \"ec2:DeleteNetworkAclEntry\",\n        \"ec2:DeleteNetworkAcl\",\n        \"ec2:DeleteNatGateway\",\n        \"ec2:DeleteLocalGatewayRouteTableVpcAssociation\",\n        \"ec2:DeleteInternetGateway\",\n        \"ec2:DeleteFlowLogs\",\n        \"ec2:DeleteEgressOnlyInternetGateway\",\n        \"ec2:DeleteDhcpOptions\",\n        \"ec2:DeleteCustomerGateway\",\n        \"ec2:DeleteCarrierGateway\",\n        \"ec2:CreateVpnGateway\",\n        \"ec2:CreateVpnConnectionRoute\",\n        \"ec2:CreateVpnConnection\",\n        \"ec2:CreateVpcPeeringConnection\",\n        \"ec2:CreateVpcEndpointServiceConfiguration\",\n        \"ec2:CreateVpcEndpointConnectionNotification\",\n        \"ec2:CreateVpcEndpoint\",\n        \"ec2:CreateVpc\",\n        \"ec2:CreateTags\",\n        \"ec2:CreateSubnet\",\n        \"ec2:CreateSecurityGroup\",\n        \"ec2:CreateRouteTable\",\n        \"ec2:CreateRoute\",\n        \"ec2:CreateNetworkInterfacePermission\",\n        \"ec2:CreateNetworkInterface\",\n        \"ec2:CreateNetworkAclEntry\",\n        \"ec2:CreateNetworkAcl\",\n        \"ec2:CreateNatGateway\",\n        \"ec2:CreateLocalGatewayRouteTableVpcAssociation\",\n        \"ec2:CreateInternetGateway\",\n        \"ec2:CreateFlowLogs\",\n        \"ec2:CreateEgressOnlyInternetGateway\",\n        \"ec2:CreateDhcpOptions\",\n        \"ec2:CreateDefaultVpc\",\n        \"ec2:CreateDefaultSubnet\",\n        \"ec2:CreateCustomerGateway\",\n        \"ec2:CreateCarrierGateway\",\n        \"ec2:AuthorizeSecurityGroupIngress\",\n        \"ec2:AuthorizeSecurityGroupEgress\",\n        \"ec2:AttachVpnGateway\",\n        \"ec2:AttachNetworkInterface\",\n        \"ec2:AttachInternetGateway\",\n        \"ec2:AttachClassicLinkVpc\",\n        \"ec2:AssociateVpcCidrBlock\",\n        \"ec2:AssociateSubnetCidrBlock\",\n        \"ec2:AssociateRouteTable\",\n        \"ec2:AssociateDhcpOptions\",\n        \"ec2:AssociateAddress\",\n        \"ec2:AssignPrivateIpAddresses\",\n        \"ec2:AssignIpv6Addresses\",\n        \"ec2:AllocateAddress\",\n        \"ec2:AcceptVpcEndpointConnections\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "ec2:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "lambda:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "s3:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "dynamodb:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "rds:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "cloudwatch:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "cloudformation:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:Delete*"
                ],
                "condition": [],
                "effect": "Deny",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "lambda:Delete*"
                ],
                "condition": [],
                "effect": "Deny",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "s3:Delete*"
                ],
                "condition": [],
                "effect": "Deny",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "dynamodb:Delete*"
                ],
                "condition": [],
                "effect": "Deny",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "rds:Delete*"
                ],
                "condition": [],
                "effect": "Deny",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "cloudwatch:Delete*"
                ],
                "condition": [],
                "effect": "Deny",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AcceptVpcPeeringConnection*"
                ],
                "condition": [],
                "effect": "Deny",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AcceptVpcEndpointConnections",
                  "ec2:AllocateAddress",
                  "ec2:AssignIpv6Addresses",
                  "ec2:AssignPrivateIpAddresses",
                  "ec2:AssociateAddress",
                  "ec2:AssociateDhcpOptions",
                  "ec2:AssociateRouteTable",
                  "ec2:AssociateSubnetCidrBlock",
                  "ec2:AssociateVpcCidrBlock",
                  "ec2:AttachClassicLinkVpc",
                  "ec2:AttachInternetGateway",
                  "ec2:AttachNetworkInterface",
                  "ec2:AttachVpnGateway",
                  "ec2:AuthorizeSecurityGroupEgress",
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:CreateCarrierGateway",
                  "ec2:CreateCustomerGateway",
                  "ec2:CreateDefaultSubnet",
                  "ec2:CreateDefaultVpc",
                  "ec2:CreateDhcpOptions",
                  "ec2:CreateEgressOnlyInternetGateway",
                  "ec2:CreateFlowLogs",
                  "ec2:CreateInternetGateway",
                  "ec2:CreateLocalGatewayRouteTableVpcAssociation",
                  "ec2:CreateNatGateway",
                  "ec2:CreateNetworkAcl",
                  "ec2:CreateNetworkAclEntry",
                  "ec2:CreateNetworkInterface",
                  "ec2:CreateNetworkInterfacePermission",
                  "ec2:CreateRoute",
                  "ec2:CreateRouteTable",
                  "ec2:CreateSecurityGroup",
                  "ec2:CreateSubnet",
                  "ec2:CreateTags",
                  "ec2:CreateVpc",
                  "ec2:CreateVpcEndpoint",
                  "ec2:CreateVpcEndpointConnectionNotification",
                  "ec2:CreateVpcEndpointServiceConfiguration",
                  "ec2:CreateVpcPeeringConnection",
                  "ec2:CreateVpnConnection",
                  "ec2:CreateVpnConnectionRoute",
                  "ec2:CreateVpnGateway",
                  "ec2:DeleteCarrierGateway",
                  "ec2:DeleteCustomerGateway",
                  "ec2:DeleteDhcpOptions",
                  "ec2:DeleteEgressOnlyInternetGateway",
                  "ec2:DeleteFlowLogs",
                  "ec2:DeleteInternetGateway",
                  "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
                  "ec2:DeleteNatGateway",
                  "ec2:DeleteNetworkAcl",
                  "ec2:DeleteNetworkAclEntry",
                  "ec2:DeleteNetworkInterface",
                  "ec2:DeleteNetworkInterfacePermission",
                  "ec2:DeleteRoute",
                  "ec2:DeleteRouteTable",
                  "ec2:DeleteSecurityGroup",
                  "ec2:DeleteSubnet",
                  "ec2:DeleteTags",
                  "ec2:DeleteVpc",
                  "ec2:DeleteVpcEndpointConnectionNotifications",
                  "ec2:DeleteVpcEndpointServiceConfigurations",
                  "ec2:DeleteVpcEndpoints",
                  "ec2:DeleteVpcPeeringConnection",
                  "ec2:DeleteVpnConnection",
                  "ec2:DeleteVpnConnectionRoute",
                  "ec2:DeleteVpnGateway",
                  "ec2:DetachClassicLinkVpc",
                  "ec2:DetachInternetGateway",
                  "ec2:DetachNetworkInterface",
                  "ec2:DetachVpnGateway",
                  "ec2:DisableVgwRoutePropagation",
                  "ec2:DisableVpcClassicLink",
                  "ec2:DisableVpcClassicLinkDnsSupport",
                  "ec2:DisassociateAddress",
                  "ec2:DisassociateRouteTable",
                  "ec2:DisassociateSubnetCidrBlock",
                  "ec2:DisassociateVpcCidrBlock",
                  "ec2:EnableVgwRoutePropagation",
                  "ec2:EnableVpcClassicLink",
                  "ec2:EnableVpcClassicLinkDnsSupport",
                  "ec2:ModifyNetworkInterfaceAttribute",
                  "ec2:ModifySecurityGroupRules",
                  "ec2:ModifySubnetAttribute",
                  "ec2:ModifyVpcAttribute",
                  "ec2:ModifyVpcEndpoint",
                  "ec2:ModifyVpcEndpointConnectionNotification",
                  "ec2:ModifyVpcEndpointServiceConfiguration",
                  "ec2:ModifyVpcEndpointServicePermissions",
                  "ec2:ModifyVpcPeeringConnectionOptions",
                  "ec2:ModifyVpcTenancy",
                  "ec2:MoveAddressToVpc",
                  "ec2:RejectVpcEndpointConnections",
                  "ec2:RejectVpcPeeringConnection",
                  "ec2:ReleaseAddress",
                  "ec2:ReplaceNetworkAclAssociation",
                  "ec2:ReplaceNetworkAclEntry",
                  "ec2:ReplaceRoute",
                  "ec2:ReplaceRouteTableAssociation",
                  "ec2:ResetNetworkInterfaceAttribute",
                  "ec2:RestoreAddressToClassic",
                  "ec2:RevokeSecurityGroupEgress",
                  "ec2:RevokeSecurityGroupIngress",
                  "ec2:UnassignIpv6Addresses",
                  "ec2:UnassignPrivateIpAddresses",
                  "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                  "ec2:UpdateSecurityGroupRuleDescriptionsIngress"
                ],
                "condition": [],
                "effect": "Deny",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_ssoadmin_instances",
      "name": "adminsso_arn",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arns": [
              "arn:aws:sso:::instance/ssoins-72233c1e1e625335"
            ],
            "id": "us-east-1",
            "identity_store_ids": [
              "d-90676689a4"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_ssoadmin_permission_set",
      "name": "sso_developer",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:sso:::permissionSet/ssoins-72233c1e1e625335/ps-ccda6ffc90cdb7e1",
            "created_date": "2021-11-24T20:27:25Z",
            "description": "Developer SSO Permission Set",
            "id": "arn:aws:sso:::permissionSet/ssoins-72233c1e1e625335/ps-ccda6ffc90cdb7e1,arn:aws:sso:::instance/ssoins-72233c1e1e625335",
            "instance_arn": "arn:aws:sso:::instance/ssoins-72233c1e1e625335",
            "name": "CaylentDeveloperAccess",
            "relay_state": "",
            "session_duration": "PT8H",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_ssoadmin_instances.adminsso_arn"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_ssoadmin_permission_set_inline_policy",
      "name": "sso_inline",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "arn:aws:sso:::permissionSet/ssoins-72233c1e1e625335/ps-ccda6ffc90cdb7e1,arn:aws:sso:::instance/ssoins-72233c1e1e625335",
            "inline_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"lambda:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"rds:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"cloudwatch:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"cloudformation:*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"ec2:Delete*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"lambda:Delete*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"s3:Delete*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"dynamodb:Delete*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"rds:Delete*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"cloudwatch:Delete*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"ec2:AcceptVpcPeeringConnection*\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"ec2:UpdateSecurityGroupRuleDescriptionsIngress\",\n        \"ec2:UpdateSecurityGroupRuleDescriptionsEgress\",\n        \"ec2:UnassignPrivateIpAddresses\",\n        \"ec2:UnassignIpv6Addresses\",\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:RevokeSecurityGroupEgress\",\n        \"ec2:RestoreAddressToClassic\",\n        \"ec2:ResetNetworkInterfaceAttribute\",\n        \"ec2:ReplaceRouteTableAssociation\",\n        \"ec2:ReplaceRoute\",\n        \"ec2:ReplaceNetworkAclEntry\",\n        \"ec2:ReplaceNetworkAclAssociation\",\n        \"ec2:ReleaseAddress\",\n        \"ec2:RejectVpcPeeringConnection\",\n        \"ec2:RejectVpcEndpointConnections\",\n        \"ec2:MoveAddressToVpc\",\n        \"ec2:ModifyVpcTenancy\",\n        \"ec2:ModifyVpcPeeringConnectionOptions\",\n        \"ec2:ModifyVpcEndpointServicePermissions\",\n        \"ec2:ModifyVpcEndpointServiceConfiguration\",\n        \"ec2:ModifyVpcEndpointConnectionNotification\",\n        \"ec2:ModifyVpcEndpoint\",\n        \"ec2:ModifyVpcAttribute\",\n        \"ec2:ModifySubnetAttribute\",\n        \"ec2:ModifySecurityGroupRules\",\n        \"ec2:ModifyNetworkInterfaceAttribute\",\n        \"ec2:EnableVpcClassicLinkDnsSupport\",\n        \"ec2:EnableVpcClassicLink\",\n        \"ec2:EnableVgwRoutePropagation\",\n        \"ec2:DisassociateVpcCidrBlock\",\n        \"ec2:DisassociateSubnetCidrBlock\",\n        \"ec2:DisassociateRouteTable\",\n        \"ec2:DisassociateAddress\",\n        \"ec2:DisableVpcClassicLinkDnsSupport\",\n        \"ec2:DisableVpcClassicLink\",\n        \"ec2:DisableVgwRoutePropagation\",\n        \"ec2:DetachVpnGateway\",\n        \"ec2:DetachNetworkInterface\",\n        \"ec2:DetachInternetGateway\",\n        \"ec2:DetachClassicLinkVpc\",\n        \"ec2:DeleteVpnGateway\",\n        \"ec2:DeleteVpnConnectionRoute\",\n        \"ec2:DeleteVpnConnection\",\n        \"ec2:DeleteVpcPeeringConnection\",\n        \"ec2:DeleteVpcEndpoints\",\n        \"ec2:DeleteVpcEndpointServiceConfigurations\",\n        \"ec2:DeleteVpcEndpointConnectionNotifications\",\n        \"ec2:DeleteVpc\",\n        \"ec2:DeleteTags\",\n        \"ec2:DeleteSubnet\",\n        \"ec2:DeleteSecurityGroup\",\n        \"ec2:DeleteRouteTable\",\n        \"ec2:DeleteRoute\",\n        \"ec2:DeleteNetworkInterfacePermission\",\n        \"ec2:DeleteNetworkInterface\",\n        \"ec2:DeleteNetworkAclEntry\",\n        \"ec2:DeleteNetworkAcl\",\n        \"ec2:DeleteNatGateway\",\n        \"ec2:DeleteLocalGatewayRouteTableVpcAssociation\",\n        \"ec2:DeleteInternetGateway\",\n        \"ec2:DeleteFlowLogs\",\n        \"ec2:DeleteEgressOnlyInternetGateway\",\n        \"ec2:DeleteDhcpOptions\",\n        \"ec2:DeleteCustomerGateway\",\n        \"ec2:DeleteCarrierGateway\",\n        \"ec2:CreateVpnGateway\",\n        \"ec2:CreateVpnConnectionRoute\",\n        \"ec2:CreateVpnConnection\",\n        \"ec2:CreateVpcPeeringConnection\",\n        \"ec2:CreateVpcEndpointServiceConfiguration\",\n        \"ec2:CreateVpcEndpointConnectionNotification\",\n        \"ec2:CreateVpcEndpoint\",\n        \"ec2:CreateVpc\",\n        \"ec2:CreateTags\",\n        \"ec2:CreateSubnet\",\n        \"ec2:CreateSecurityGroup\",\n        \"ec2:CreateRouteTable\",\n        \"ec2:CreateRoute\",\n        \"ec2:CreateNetworkInterfacePermission\",\n        \"ec2:CreateNetworkInterface\",\n        \"ec2:CreateNetworkAclEntry\",\n        \"ec2:CreateNetworkAcl\",\n        \"ec2:CreateNatGateway\",\n        \"ec2:CreateLocalGatewayRouteTableVpcAssociation\",\n        \"ec2:CreateInternetGateway\",\n        \"ec2:CreateFlowLogs\",\n        \"ec2:CreateEgressOnlyInternetGateway\",\n        \"ec2:CreateDhcpOptions\",\n        \"ec2:CreateDefaultVpc\",\n        \"ec2:CreateDefaultSubnet\",\n        \"ec2:CreateCustomerGateway\",\n        \"ec2:CreateCarrierGateway\",\n        \"ec2:AuthorizeSecurityGroupIngress\",\n        \"ec2:AuthorizeSecurityGroupEgress\",\n        \"ec2:AttachVpnGateway\",\n        \"ec2:AttachNetworkInterface\",\n        \"ec2:AttachInternetGateway\",\n        \"ec2:AttachClassicLinkVpc\",\n        \"ec2:AssociateVpcCidrBlock\",\n        \"ec2:AssociateSubnetCidrBlock\",\n        \"ec2:AssociateRouteTable\",\n        \"ec2:AssociateDhcpOptions\",\n        \"ec2:AssociateAddress\",\n        \"ec2:AssignPrivateIpAddresses\",\n        \"ec2:AssignIpv6Addresses\",\n        \"ec2:AllocateAddress\",\n        \"ec2:AcceptVpcEndpointConnections\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "instance_arn": "arn:aws:sso:::instance/ssoins-72233c1e1e625335",
            "permission_set_arn": "arn:aws:sso:::permissionSet/ssoins-72233c1e1e625335/ps-ccda6ffc90cdb7e1"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_ssoadmin_permission_set.sso_developer",
            "data.aws_iam_policy_document.sso_permissions",
            "data.aws_ssoadmin_instances.adminsso_arn"
          ]
        }
      ]
    }
  ]
}
